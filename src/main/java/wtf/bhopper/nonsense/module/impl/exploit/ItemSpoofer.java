package wtf.bhopper.nonsense.module.impl.exploit;

import meteordevelopment.orbit.EventHandler;
import net.minecraft.item.ItemStack;
import net.minecraft.network.play.client.C08PacketPlayerBlockPlacement;
import net.minecraft.network.play.client.C10PacketCreativeInventoryAction;
import net.minecraft.network.play.server.S2FPacketSetSlot;
import net.minecraft.network.play.server.S30PacketWindowItems;
import wtf.bhopper.nonsense.event.impl.EventPreTick;
import wtf.bhopper.nonsense.event.impl.EventReceivePacket;
import wtf.bhopper.nonsense.event.impl.EventSendPacket;
import wtf.bhopper.nonsense.gui.hud.notification.Notification;
import wtf.bhopper.nonsense.gui.hud.notification.NotificationType;
import wtf.bhopper.nonsense.module.Module;
import wtf.bhopper.nonsense.util.minecraft.client.PacketUtil;

public class ItemSpoofer extends Module {

    public ItemSpoofer() {
        super("Item Spoofer", "Allows you to spoof items in creative mode", Category.EXPLOIT);
    }

    @Override
    public void onEnable() {

        if (!mc.thePlayer.capabilities.isCreativeMode) {
            Notification.send("Item Spoofer", "You must be in creative mode to use Item Spoofer", NotificationType.WARNING, 3000);
            this.toggle(false);
            return;
        }

        for (int i = 0; i < mc.thePlayer.inventoryContainer.getInventory().size(); ++i) {
            mc.playerController.sendSlotPacket(null, i);
        }
    }

    @Override
    public void onDisable() {
        this.clearInventory();
    }

    @EventHandler
    public void onTick(EventPreTick event) {
        if (!mc.thePlayer.capabilities.isCreativeMode) {
            this.toggle(false);
        }
    }

    @EventHandler
    public void onSendPacket(EventSendPacket event) {
        if (event.packet instanceof C10PacketCreativeInventoryAction) {
            event.cancel();
        }

        if (event.packet instanceof C08PacketPlayerBlockPlacement) {
            event.cancel();
            C08PacketPlayerBlockPlacement packet = (C08PacketPlayerBlockPlacement)event.packet;
            PacketUtil.sendNoEvent(new C10PacketCreativeInventoryAction(mc.thePlayer.inventory.currentItem + 36, packet.getStack()));
            PacketUtil.sendNoEvent(packet);
            PacketUtil.sendNoEvent(new C10PacketCreativeInventoryAction(mc.thePlayer.inventory.currentItem + 36, null));
        }
    }

    @EventHandler
    public void onReceivePacket(EventReceivePacket event) {

        if (event.packet instanceof S2FPacketSetSlot) {
            S2FPacketSetSlot packet = (S2FPacketSetSlot)event.packet;
            if (packet.getWindowID() == 0 && packet.getSlot() >= 36 && packet.getSlot() < 45) {
                event.cancel();
                PacketUtil.sendNoEvent(new C10PacketCreativeInventoryAction(packet.getSlot(), null));
            }
        }

        if (event.packet instanceof S30PacketWindowItems) {
            S30PacketWindowItems packet = (S30PacketWindowItems)event.packet;
            if (packet.getWindowID() == 0) {
                for (int i = 0; i < mc.thePlayer.inventoryContainer.getInventory().size(); ++i) {
                    mc.playerController.sendSlotPacket(null, i);
                }
            }
        }

    }

    private void clearInventory() {
        for (int i = 0; i < mc.thePlayer.inventoryContainer.getInventory().size(); ++i) {
            mc.playerController.sendSlotPacket(null, i);
        }
        mc.thePlayer.inventory.clear();
    }

}
