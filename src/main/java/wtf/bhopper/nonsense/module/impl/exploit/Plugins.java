package wtf.bhopper.nonsense.module.impl.exploit;

import meteordevelopment.orbit.EventHandler;
import net.minecraft.network.play.client.C14PacketTabComplete;
import net.minecraft.network.play.server.S3APacketTabComplete;
import wtf.bhopper.nonsense.event.impl.EventPreTick;
import wtf.bhopper.nonsense.event.impl.EventReceivePacket;
import wtf.bhopper.nonsense.module.Module;
import wtf.bhopper.nonsense.util.minecraft.client.ChatUtil;
import wtf.bhopper.nonsense.util.minecraft.client.PacketUtil;

import java.util.ArrayList;
import java.util.List;

public class Plugins extends Module {

    private int ticks = 0;

    public Plugins() {
        super("Plugins", "Scans the server for plugins", Category.EXPLOIT);
    }

    @Override
    public void onEnable() {
        if (mc.isSingleplayer()) {
            ChatUtil.error("HOHOHO YES!!! IM GONNA SCAN FOR PLUGINS IN MY SINGLE PLAYER WOLRD");
            this.toggle(false);
            return;
        }
        PacketUtil.sendNoEvent(new C14PacketTabComplete("/"));
        ticks = 0;
    }

    @EventHandler
    public void onTick(EventPreTick event) {
        ticks++;
        if (ticks >= 20) {
            ChatUtil.error("Plugins check timed out");
            ticks = 0;
            this.toggle(false);
        }
    }

    @EventHandler
    public void onReceivePacket(EventReceivePacket event) {
        if (event.packet instanceof S3APacketTabComplete) {
            S3APacketTabComplete packet = (S3APacketTabComplete)event.packet;

            List<String> plugins = new ArrayList<>();
            String[] commands = packet.getMatches();

            for (String command : commands) {
                String[] cmdParts = command.split(":");
                if (cmdParts.length > 1) {
                    String plugin = cmdParts[0].replace("/", "");
                    if (!plugins.contains(plugin)) {
                        plugins.add(plugin);
                    }
                }
            }

            if (!plugins.isEmpty()) {
                ChatUtil.print("\247aPlugins \2478(\2477%d\2478): \247c%s", plugins.size(), String.join("\2477, \247c", plugins));
            } else {
                ChatUtil.error("No plugins were found");
            }

            this.toggle(false);

        }
    }
}
